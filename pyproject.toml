[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "exohunter"
version = "1.0.0"
description = "AI-powered exoplanet classification system"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ExoHunter Team", email = "team@exohunter.ai"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "xgboost>=2.0.0",
    "joblib>=1.3.0",
    "pydantic>=2.0.0",
    "python-multipart>=0.0.6",
    "SQLAlchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "redis>=5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
streamlit = [
    "streamlit>=1.28.0",
    "plotly>=5.15.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]
notebooks = [
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "notebook>=7.0.0",
]

[project.urls]
Homepage = "https://github.com/JustineBijuPaul/exoplanet.io"
Repository = "https://github.com/JustineBijuPaul/exoplanet.io"
Documentation = "https://github.com/JustineBijuPaul/exoplanet.io/blob/main/docs/"
"Bug Tracker" = "https://github.com/JustineBijuPaul/exoplanet.io/issues"

[project.scripts]
exohunter-api = "web.api.main:main"
exohunter-train = "models.train_baseline:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["exohunter*", "web*", "models*", "data*"]
exclude = ["tests*", "docs*", "notebooks*"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yml", "*.yaml", "*.txt", "*.md"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "api: marks tests as API tests", 
    "performance: marks tests as performance/smoke tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | node_modules
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
    ".pytest_cache",
    ".mypy_cache",
]

[tool.coverage.run]
source = ["exohunter", "web", "models", "data"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/conftest.py",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
